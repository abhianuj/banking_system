Description
This product simulates a secured banking system which covers the following aspects of the problem statement:-
•	The system accepts the user’s credentials and checks legitimacy of the user.
•	In case the user is legitimate it asks the user whether he wants to know the account balance, make fund transfer or update balance.
•	In case user is not legitimate the unauthorized access attempt is entered in the log viewable by admin. 
•	If more than 3 wrong login attempts are made for the user account is locked and not allowed access, which can only be enabled by admin.
•	Secured password based account unlock by legitimate user.
•	Monthly report generated of unauthorized access attempts.

Features

    Authentication
        For regular user, user gets authenticated covering two scenarios:-
        •	If username is invalid tells user to retry
        •	If username is valid asks for passwords with 3 attempts after which account gets locked.
        For administrators, the process is same except there is no limit to number of attempts.

    Authorization
        The user of the product is categorized with two roles:-
        •	Administrator
        •	User

    User Role Functionalities
        User is provided with a set of options such as:-
        •   VIEW BALANCE       - They can see their existing balance.
        •   FUND TRANSFER      - They can send money to other accounts.
        •   TRANSATION HISTORY - They can see their transaction history.
        •   LOGOUT             - Logged out back to main screen.

    Admin Role Functionalities
        •   VIEW BLOCKED USER    -   Admin can see list of blocked users
        •   UNBLOCK USER         -   Admin can unblock locked users
        •   VIEW MONTHLY REPORT OF UNAUTHORISED ACCESS - Admin can see monthly report of unauthorised access. 
        •   LOGOUT 

Technical requirements

    Software requirements
        •   C Compiler

    Hardware requirements
        •   Intel core 2 Duo
        •   2 GB ram

Dependency
    The code depends on "bdata.txt" file which stores bank details of users.




